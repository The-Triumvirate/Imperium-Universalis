namespace = slave_trade

country_event = {
	id = slave_trade.1
	title = "slave_trade.1.t"
	desc = "slave_trade.1.d"
	picture = slaves
	is_triggered_only = yes

	trigger = {
		check_variable = { SD_slave_demand = 1 }		# Wants to buy slaves
		check_variable = { SD_slave_budget = 10 }		# There is still budget to buy
		check_variable = { SD_trade_price = 20 }		# Price has been agreed, at least
		any_active_trade_node = {
			any_trade_node_member_province = {
				has_province_modifier = SD_market_open
				check_variable = { SD_slaves_available = 1 }
			}
		}
	}

	# mean_time_to_happen = {
	# 	months = 18
	# }

	immediate = {
		hidden_effect = {
			# prepare the budget and money to spend

			# Variables to remember: country (buyer) level:
			# SD_slave_demand / SD_slave_budget / SD_trade_price -> slaves demanded / money to spend / price offered
			# SD_new_purchases / SD_new_slaves -> slaves ready to be included / main variable (moved in slaves.1 evt)
			# SD_new_paid / SD_budget_spent -> money done in the transation / total purchases (moved in slaves.1 evt)

			# Cleanup needed variables
			set_variable = { which = SD_transaction value = 0 }
			set_variable = { which = SD_sell_size value = 0 }
			set_variable = { which = SD_new_purchases value = 0 }
			set_variable = { which = SD_new_paid value = 0 }

			#set_variable = { which = SD_slave_demand value = 160 }		# will come from the slave options, at country level
			#set_variable = { which = SD_slave_budget value = 3000 }		# will come from the slave options, at country level
			#set_variable = { which = SD_trade_price value = 40 }		# will come from the slave options, at country level



			# let's find which provinces to buy slaves from. Sorted by purchase price (first cheap at 20, then mid 40 if possible, then 60)
			# Most of the code is stored in common/scripted effects/slaves_effects

			# First instance: the cheapest, at 20
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					check_variable = { SD_trade_price = 20 }
				}
				SD_purchase_slaves_active_tn = { num = 1 price = 20 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					check_variable = { SD_trade_price = 20 }
				}
				SD_purchase_slaves_active_tn = { num = 2 price = 20 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					check_variable = { SD_trade_price = 20 }
				}
				SD_purchase_slaves_active_tn = { num = 3 price = 20 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					check_variable = { SD_trade_price = 20 }
				}
				SD_purchase_slaves_active_tn = { num = 4 price = 20 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					check_variable = { SD_trade_price = 20 }
				}
				SD_purchase_slaves_active_tn = { num = 5 price = 20 }
			}

			# Second instance: price raised to 40
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_1 } 			# not done before
					check_variable = { SD_trade_price = 40 }
				}
				SD_purchase_slaves_active_tn = { num = 1 price = 40 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_2 } 			# not done before
					check_variable = { SD_trade_price = 40 }
				}
				SD_purchase_slaves_active_tn = { num = 2 price = 40 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_3 } 			# not done before
					check_variable = { SD_trade_price = 40 }
				}
				SD_purchase_slaves_active_tn = { num = 3 price = 40 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_4 } 			# not done before
					check_variable = { SD_trade_price = 40 }
				}
				SD_purchase_slaves_active_tn = { num = 4 price = 40 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_5 } 			# not done before
					check_variable = { SD_trade_price = 40 }
				}
				SD_purchase_slaves_active_tn = { num = 5 price = 40 }
			}

			# Third and last instance: only for price 60 (u mad bro??)
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_1 } 			# not done before
					check_variable = { SD_trade_price = 60 }
				}
				SD_purchase_slaves_active_tn = { num = 1 price = 60 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_2 } 			# not done before
					check_variable = { SD_trade_price = 60 }
				}
				SD_purchase_slaves_active_tn = { num = 2 price = 60 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_3 } 			# not done before
					check_variable = { SD_trade_price = 60 }
				}
				SD_purchase_slaves_active_tn = { num = 3 price = 60 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_4 } 			# not done before
					check_variable = { SD_trade_price = 60 }
				}
				SD_purchase_slaves_active_tn = { num = 4 price = 60 }
			}
			if = {
				limit = {
					check_variable = { which = SD_slave_budget which = SD_new_paid } 	# if there is still money left
					NOT = { has_saved_event_target = SD_purchase_province_5 } 			# not done before
					check_variable = { SD_trade_price = 60 }
				}
				SD_purchase_slaves_active_tn = { num = 5 price = 60 }
			}

			# Now we have stored 5 provinces where to purchase the slaves from, trying to get a good price wherever possible. 



		}

		if = { limit = { has_saved_event_target = SD_purchase_province_1 } custom_tooltip = SLAVE_TRADE_1_PROV1 }
		if = { limit = { has_saved_event_target = SD_purchase_province_2 } custom_tooltip = SLAVE_TRADE_1_PROV2 }
		if = { limit = { has_saved_event_target = SD_purchase_province_3 } custom_tooltip = SLAVE_TRADE_1_PROV3 }
		if = { limit = { has_saved_event_target = SD_purchase_province_4 } custom_tooltip = SLAVE_TRADE_1_PROV4 }
		if = { limit = { has_saved_event_target = SD_purchase_province_5 } custom_tooltip = SLAVE_TRADE_1_PROV5 }
		if = { limit = { has_saved_event_target = SD_purchase_province_1 } custom_tooltip = SLAVE_TRADE_1_END }
		else = { custom_tooltip = SLAVE_TRADE_1_NONE }


	}


	option = {
		name = "slave_trade.1.1"	# Ok thanks. Gain new slaves (not added until the 5-yearly event); budget stays unspent. The event will fire again
		ai_chance = { factor = 100 }
		trigger = { has_saved_event_target = SD_purchase_province_1 }
		# Move slaves to the "permanent" variable
		hidden_effect = {
			# slaves
			change_variable = { which = SD_new_slaves which = SD_new_purchases }
			subtract_variable = { which = SD_slave_demand which = SD_new_purchases }

			# money
			change_variable = { which = SD_budget_spent which = SD_new_paid }
			subtract_variable = { which = SD_slave_budget which = SD_new_paid }		# will be lower in the next event

		}

		custom_tooltip = SLAVE_TRADE_1_OPTA
	}
	option = {
		name = "slave_trade.1.2"	# Rush into getting the slaves, cause 1x inflation on slaves' money paid
		ai_chance = { factor = 0 }
		trigger = { has_saved_event_target = SD_purchase_province_1 }
		hidden_effect = {
			# slaves
			change_variable = { which = slaves which = SD_new_purchases }
			subtract_variable = { which = SD_slave_demand which = SD_new_purchases }

			# money
			change_variable = { which = SD_budget_spent which = SD_new_paid }
			subtract_variable = { which = SD_slave_budget which = SD_new_paid }

			# inflation to punish the rushing of slaves
			SD_inflation_prepare = { var = SD_new_paid strength = 1 }
			SD_inflation_effect = { var = SD_inflation }
		}
		custom_tooltip = SLAVE_TRADE_1_OPTB

	}
	option = {
		name = "slave_trade.1.3"	# This is too much, we have to stop (move slaves to the country, generate 2x inflation on unspent money, stops)
		ai_chance = { factor = 0 }
		trigger = { has_saved_event_target = SD_purchase_province_1 }
		hidden_effect = {
			# slaves
			change_variable = { which = slaves which = SD_new_purchases }
			set_variable = { which = SD_slave_demand value = 0 }

			# money
			change_variable = { which = SD_budget_spent which = SD_new_paid }
			subtract_variable = { which = SD_slave_budget which = SD_new_paid }

			# inflation to punish the rushing of slaves
			SD_inflation_prepare = { var = SD_new_paid strength = 1 }
			SD_inflation_effect = { var = SD_inflation }

			# inflation for the money retrieved from the merchants (2x inflation, the merchants may have slipped it)
			SD_inflation_prepare = { var = SD_slave_budget strength = 2 }
			SD_inflation_effect = { var = SD_inflation }

			set_variable = { which = SD_budget_spent value = 0 }
			set_variable = { which = SD_new_paid value = 0 }
			money_gain_effect = { var = SD_slave_budget }		# wil also be set at zero

		}

		custom_tooltip = SLAVE_TRADE_1_OPTC
	}

	option = {
		name = "slave_trade.1.4"	# No slaves found. Keep digging (probably will just return the same result)
		ai_chance = { factor = 0 }
		trigger = { NOT = { has_saved_event_target = SD_purchase_province_1 } }

	}
	option = {
		name = "slave_trade.1.5"	# Stop the search, we need the money elsewhere.
		ai_chance = { factor = 100 }
		trigger = { NOT = { has_saved_event_target = SD_purchase_province_1 } }
		set_variable = { which = SD_budget_spent value = 0 }
		set_variable = { which = SD_new_paid value = 0 }
		money_gain_effect = { var = SD_slave_budget }		# will also be set at zero


	}




	after = {
		# cleanup variables created
		if = {
			limit = { has_saved_event_target = SD_purchase_province_1 }
			event_target:SD_purchase_province_1 = { 
				clr_province_flag = SD_taken
				set_variable = { which = SD_transaction value = 0 } set_variable = { which = SD_sell_size value = 0 } 
			}
		}
		if = {
			limit = { has_saved_event_target = SD_purchase_province_2 }
			event_target:SD_purchase_province_2 = { 
				clr_province_flag = SD_taken
				set_variable = { which = SD_transaction value = 0 } set_variable = { which = SD_sell_size value = 0 } 
			}
		}
		if = {
			limit = { has_saved_event_target = SD_purchase_province_3 }
			event_target:SD_purchase_province_3 = { 
				clr_province_flag = SD_taken
				set_variable = { which = SD_transaction value = 0 } set_variable = { which = SD_sell_size value = 0 } 
			}
		}
		if = {
			limit = { has_saved_event_target = SD_purchase_province_4 }
			event_target:SD_purchase_province_4 = { 
				clr_province_flag = SD_taken
				set_variable = { which = SD_transaction value = 0 } set_variable = { which = SD_sell_size value = 0 } 
			}
		}
		if = {
			limit = { has_saved_event_target = SD_purchase_province_5 }
			event_target:SD_purchase_province_5 = { 
				clr_province_flag = SD_taken
				set_variable = { which = SD_transaction value = 0 } set_variable = { which = SD_sell_size value = 0 } 
			}
		}

		set_variable = { which = SD_new_purchases value = 0 }
		set_variable = { which = SD_new_paid value = 0 }
	}
}

# CAPTIVE events
#	make them simple, just distribute slaves around the CoTs or at the capital, nothing else

# 2: Sell captives (fired every 1 year with captives, or after the war)
# 3: set price

# sell SLAVES by decision
# 4: set quantity, 5: set price

country_event = {
	id = slave_trade.2			# Sell captives after 12 months in (war unfinished)
	title = "slave_trade.2.t"
	desc = "slave_trade.2.d"
	picture = slave_market

	trigger = {
		had_country_flag = { flag = SD_recent_captives days = 365 }
		check_variable = { SD_captives = 10 }

	}
	mean_time_to_happen = { months = 12 }

	immediate = {

		hidden_effect = {
			set_variable = { which = float_1 which = SD_captives } multiply_variable = { float_1 = 0.333 }
			set_variable = { which = float_2 which = SD_captives } multiply_variable = { float_2 = 0.666 }
			if = { limit = { NOT = { check_variable = { SD_trade_price = 20 } } } set_variable = { which = SD_trade_price value = 40 } }
		}

	}


	option = {
		name = "slave_trade.2.1"	# All to sell
		ai_chance = { factor = 50 }
		hidden_effect = {
			while = {
				limit = {
					check_variable = { SD_captives = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { SD_captives = 10 }
			}
			clr_country_flag = SD_recent_captives
		}

	}

	option = {
		name = "slave_trade.2.2"	# 66% sell, 33% own slaves
		ai_chance = { factor = 30 }
		hidden_effect = {
			change_variable = { which = slaves which = float_1 }
			subtract_variable = { which = SD_captives which = float_1 }

			while = {
				limit = {
					check_variable = { SD_captives = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { SD_captives = 10 }
			}
			clr_country_flag = SD_recent_captives
		}
	}

	option = {
		name = "slave_trade.2.3"	# 33% sell, 66% own slaves
		ai_chance = { factor = 20 }
		trigger = { has_estate = estate_slaves } 				# forces normal tribals and nomadics out, make them sell most of it
		hidden_effect = {
			change_variable = { which = slaves which = float_2 }
			subtract_variable = { which = SD_captives which = float_2 }

			while = {
				limit = {
					check_variable = { SD_captives = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { SD_captives = 10 }
			}
			clr_country_flag = SD_recent_captives
		}
	}

	option = {
		name = "slave_trade.2.4"	# All into slavery
		ai_chance = { factor = 20 }
		trigger = { has_estate = estate_slaves } 				# forces normal tribals and nomadics out, make them sell most of it
		hidden_effect = {
			change_variable = { which = slaves which = SD_captives }
			set_variable = { which = SD_captives value = 0 }
		}
		clr_country_flag = SD_recent_captives
	}

	option = {
		name = "slave_trade.2.5"	# Pardon them all (move into random owned places with growth)
		ai_chance = { factor = 0 }
		hidden_effect = {
			change_variable = { which = freedmen_new which = SD_captives }
			set_variable = { which = SD_captives value = 0 }
			while = {
				limit = {
					check_variable = { freedmen_new = 10 }
					any_owned_province = {
						OR = { check_variable = { PG_trb_grow = 120 } check_variable = { PG_com_grow = 120 } }
						NOT = { has_province_modifier = PG_new_freedmen }
					}

				}
				random_owned_province = {
					limit = {
						OR = { check_variable = { PG_trb_grow = 120 } check_variable = { PG_com_grow = 120 } }
						NOT = { has_province_modifier = PG_new_freedmen }
					}
					PG_migrate_freedmen = yes
					if = {
						limit = { has_global_flag = popgrowth_v5capacities }
						province_event = { id = population_capacity.15 }
					}
					else = { province_event = { id = population_capacity.4 } }
				}

			}
			# all those not assiged, will be lost
			set_variable = { which = freedmen_new value = 0 }
			clr_country_flag = SD_recent_captives
		}
	}
	option = {
		name = "slave_trade.2.6"	# Change the price we are offering
		ai_chance = { factor = 20 }
		country_event = { id = slave_trade.5 }
		

	}

	option = {
		name = "slave_trade.2.7"	# I will think it later on (reset flag)
		ai_chance = { factor = 0 }
		clr_country_flag = SD_recent_captives
		set_country_flag = SD_recent_captives

	}





}



country_event = {
	id = slave_trade.3
	title = "slave_trade.3.t"
	desc = "slave_trade.3.d"
	picture = slave_market

	is_triggered_only = yes
	immediate = {



	}

	option = {
		name = "slave_trade.3.1"	# At 20 (cheapest)
		ai_chance = { factor = 40 }
		set_variable = { which = SD_trade_price value = 20 }
		country_event = { id = slave_trade.2 }

	}
	option = {
		name = "slave_trade.3.2"	# At 40 (normal)
		ai_chance = { factor = 40 }
		set_variable = { which = SD_trade_price value = 40 }
		country_event = { id = slave_trade.2 }

	}
	option = {
		name = "slave_trade.3.3"	# At 60 (high)
		ai_chance = { factor = 20 }
		set_variable = { which = SD_trade_price value = 60 }
		country_event = { id = slave_trade.2 }

	}


}

country_event = { 
	id = slave_trade.4			
	title = "slave_trade.4.t"
	desc = "slave_trade.4.d"
	picture = slave_market
	is_triggered_only = yes


	immediate = {

		hidden_effect = {
			set_variable = { which = float_1 which = slaves } 	# to sell 10%
			multiply_variable = { float_1 = 0.1 }

			set_variable = { which = float_2 value = 10 } 		# to sell 10.000
			if = {
				limit = { check_variable = { which = float_2 which = slaves } }	# too many, limited to slave amt
				set_variable = { which = float_2 which = slaves }
			}

			set_variable = { which = float_3 value = 50 } 		# to sell 50.000
			if = {
				limit = { check_variable = { which = float_3 which = slaves } }	# too many, limited to slave amt
				set_variable = { which = float_3 which = slaves }
			}

			set_variable = { which = float_4 value = 100 } 		# to sell 100.000
			if = {
				limit = { check_variable = { which = float_4 which = slaves } }	# too many, limited to slave amt
				set_variable = { which = float_4 which = slaves }
			}

			set_variable = { which = float_5 value = 200 } 		# to sell 200.000
			if = {
				limit = { check_variable = { which = float_5 which = slaves } }	# too many, limited to slave amt
				set_variable = { which = float_5 which = slaves }
			}

			if = {												# to sell over 100%, only if it has 100%
				limit = { check_variable = { slave_pop_social = 100 } }

				set_variable = { which = float_6 which = slaves_tot_display }
				set_variable = { which = float_7 which = slaves_tot_display }
				divide_variable = { which = float_7 which = slave_pop_social }
				multiply_variable = { float_7 = 100 }
				subtract_variable = { which = float_6 which = float_7 }
			}
			if = {
				limit = { check_variable = { which = float_6 which = slaves } }	# too many, limited to slave amt
				set_variable = { which = float_6 which = slaves }
			}

			# Fallback for price, if it has never been changed
			if = { limit = { NOT = { check_variable = { SD_trade_price = 20 } } } set_variable = { which = SD_trade_price value = 40 } }
		}

	}

	option = {
		name = "slave_trade.4.1"	# Sell 10%
		ai_chance = { factor = 20 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_1 }
			while = {
				limit = {
					check_variable = { float_1 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_1 = 10 }
			}
			change_variable = { which = slaves which = float_1 }	# for low-value, to not lose the small %s
		}
	}

	option = {
		name = "slave_trade.4.2"	# Sell 10k
		ai_chance = { factor = 20 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_2 }
			while = {
				limit = {
					check_variable = { float_2 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_2 = 10 }
			}
		}
	}

	option = {
		name = "slave_trade.4.3"	# Sell 50k
		trigger = { check_variable = { slaves = 10 } }	# previous step, if it reaches it, means that this is possible.
		ai_chance = { factor = 20 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_3 }
			while = {
				limit = {
					check_variable = { float_3 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_3 = 10 }
			}
		}
	}

	option = {
		name = "slave_trade.4.4"	# Sell 100k
		trigger = { check_variable = { slaves = 50 } }	# previous step, if it reaches it, means that this is possible.
		ai_chance = { factor = 20 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_4 }
			while = {
				limit = {
					check_variable = { float_4 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_4 = 10 }
			}
		}
	}

	option = {
		name = "slave_trade.4.5"	# Sell 200k
		trigger = { check_variable = { slaves = 100 } }	# previous step, if it reaches it, means that this is possible.
		ai_chance = { factor = 20 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_5 }
			while = {
				limit = {
					check_variable = { float_5 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_5 = 10 }
			}
		}
	}

	option = {
		name = "slave_trade.4.6"	# Sell all over 100%
		trigger = { check_variable = { slave_pop_social = 100 } }
		ai_chance = { factor = 60 }

		hidden_effect = {
			subtract_variable = { which = slaves which = float_6 }
			while = {
				limit = {
					check_variable = { float_6 = 10 }
					any_owned_province = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
				}
				random_owned_province = {
					limit = { OR = { province_has_center_of_trade_of_level = 1 is_capital = yes } }
					change_variable = { SD_slaves_available = 10 }
					if = {
						limit = { NOT = { has_province_modifier = SD_market_open } }
						add_province_modifier = { name = SD_market_open duration = -1 }
					}
					set_variable = { which = SD_trade_price which = ROOT }
				}
				subtract_variable = { float_6 = 10 }
			}
		}

	}




	option = {
		name = "slave_trade.4.10"	# Change the price we are offering
		ai_chance = { factor = 0 }
		country_event = { id = slave_trade.5 }


	}

	option = {
		name = "slave_trade.4.99"	# Stop this sale, we will do it later
		ai_chance = { factor = 0 }

	}


	after = {
		set_variable = { which = SD_slaves_available value = 0 }
		every_owned_province = {
			limit = { check_variable = { SD_slaves_available = 1 } }				# any province with slaves being sold
			owner = { change_variable = { which = SD_slaves_available which = PREV } }
		}

		SD_slave_totaldisp_update = yes
	}
}

country_event = {
	id = slave_trade.5
	title = "slave_trade.5.t"
	desc = "slave_trade.5.d"
	picture = slave_market

	is_triggered_only = yes
	immediate = {

	}

	option = {
		name = "slave_trade.5.1"	# At 20 (cheapest)
		ai_chance = { factor = 40 }
		set_variable = { which = SD_trade_price value = 20 }
		country_event = { id = slave_trade.4 }

	}
	option = {
		name = "slave_trade.5.2"	# At 40 (normal)
		ai_chance = { factor = 40 }
		set_variable = { which = SD_trade_price value = 40 }
		country_event = { id = slave_trade.4 }

	}
	option = {
		name = "slave_trade.5.3"	# At 60 (high)
		ai_chance = { factor = 20 }
		set_variable = { which = SD_trade_price value = 60 }
		country_event = { id = slave_trade.4 }

	}

}

###
#	EXPERIMENTAL EVENTS, to do debug testing
###

province_event = {		# Debug event, to add slaves into a province (it is being sold)
	id = slave_trade.25
	title = "slave_trade.25.t"
	desc = "slave_trade.25.d"
	picture = slaves
	is_triggered_only = yes

	trigger = {

	}


	immediate = {
		#hidden_effect = {
		# remove previous modifier
		remove_province_modifier = SD_market_open



		#}
	}


	option = {
		name = "slave_trade.25.1"	# Add slaves, base
		set_variable = { SD_slaves_available = 30 }

	}
	option = {
		name = "slave_trade.25.1"	# Add slaves, base
		change_variable = { SD_slaves_available = 20 }

	}

	option = {
		name = "slave_trade.25.1"	# set the price, high

		set_variable = { which = SD_trade_price value = 60 }

	}
	option = {
		name = "slave_trade.25.1"	# set the price, normal

		set_variable = { which = SD_trade_price value = 40 }

	}
	option = {
		name = "slave_trade.25.1"	# set the price, low

		set_variable = { which = SD_trade_price value = 20 }

	}

	option = {
		name = "slave_trade.25.1"


	}

	after = {
		if = {
			limit = { check_variable = { SD_slaves_available = 1 } }
			add_province_modifier = { name = SD_market_open duration = -1 }
			set_province_flag = SD_market_open_flag
			# adds a flag to know if, after X years, all slaves have been sold. If not, you get an event suggesting to lower the price
		}
		else_if = {
			limit = { has_province_flag = SD_market_open_flag }		# flag but no slaves
			clr_province_flag = SD_market_open_flag
		}





	}
}


