# SOME META SCRIPT EXAMPLES
# This also works for Scripted effects the same. Provided arguments will be pasted in
# wherever the key occurs. If it fails to compile you should get a proper error message
# and the source generated in the error log. There is no added overhead during runtime but
# if used extensivley it might make loading time longer.
#
# my_test_trigger = {
#	OR = {
#		has_country_modifier = $ARG1$_modifier
#		AND = {
#			has_country_modifier = $ARG2$_modifier
#			$CONTEXT$ = {
#				NOT = { has_country_modifier = $ARG1$_modifier }
#			}
#		}
#	}
# }
# Usage:
# my_test_trigger = { ARG1 = foo ARG2 = bar CONTEXT = FROM }

is_subject_other_than_tributary_trigger = { #Ie Tags that cannot conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_subject_other_than_tributary_trigger_tooltip
		is_subject = yes
		NOT = { is_subject_of_type = tributary_state }
	}
}

is_free_or_tributary_trigger = { #I.e. Tags that can conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_free_or_tributary_trigger_tooltip
		OR = {
			is_subject = no
			is_subject_of_type = tributary_state
		}
	}
}

highest_supply_limit_in_area = {
	NOT = {
		area_for_scope_province = {
			NOT = { province_id = prev }
			owned_by = root
			supply_limit = prev
			NOT = { prev = { supply_limit = prev } }
		}
	}
}

#GENERAL TRIGGERS
has_mil_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_tooltip
		OR = {
			advisor = army_leader_adv
			advisor = army_reformer_adv
			advisor = army_veteran
			advisor = foreign_warrior
			advisor = engineer
			advisor = army_recruiter_adv
			advisor = cavalry_leader
			advisor = mercenary_leader
			advisor = armor_smith
			advisor = patrician
			advisor = organiser_adv
			advisor = defense_adv
			advisor = logistics_adv
			advisor = border_adv
		}
	}
}

has_mil_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_2_tooltip
		OR = {
			army_leader_adv = 2
			army_reformer_adv = 2
			army_veteran = 2
			foreign_warrior = 2
			engineer = 2
			army_recruiter_adv = 2
			cavalry_leader = 2
			mercenary_leader = 2
			armor_smith = 2
			patrician = 2
			organiser_adv = 2
			defense_adv = 2
			logistics_adv = 2
			border_adv = 2
		}
	}
}

has_mil_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_3_tooltip
		OR = {
			army_leader_adv = 3
			army_reformer_adv = 3
			army_veteran = 3
			foreign_warrior = 3
			engineer = 3
			army_recruiter_adv = 3
			cavalry_leader = 3
			mercenary_leader = 3
			armor_smith = 3
			patrician = 3
			organiser_adv = 3
			defense_adv = 3
			logistics_adv = 3
			border_adv = 3
		}
	}
}

has_adm_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_tooltip
		OR = {
			advisor = astronomer_adv
			advisor = astrologist_adv
			advisor = mint_advisor
			advisor = innovator_advisor
			advisor = administrator_advisor
			advisor = spymaster_advisor
			advisor = scholar_advisor
			advisor = architect
			advisor = statesman_adv
			advisor = oracle
			advisor = priest_adv
			advisor = mathematician
			advisor = farmer
			advisor = philosopher_adv
		}
	}
}

has_adm_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_2_tooltip
		OR = {
			astronomer_adv = 2
			astrologist_adv = 2
			mint_advisor = 2
			innovator_advisor = 2
			administrator_advisor = 2
			spymaster_advisor = 2
			scholar_advisor = 2
			architect = 2
			statesman_adv = 2
			oracle = 2
			priest_adv = 2
			mathematician = 2
			farmer = 2
			philosopher_adv = 2
		}
	}
}

has_adm_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_3_tooltip
		OR = {
			astronomer_adv = 3
			astrologist_adv = 3
			mint_advisor = 3
			innovator_advisor = 3
			administrator_advisor = 3
			spymaster_advisor = 3
			scholar_advisor = 3
			architect = 3
			statesman_adv = 3
			oracle = 3
			priest_adv = 3
			mathematician = 3
			farmer = 3
			philosopher_adv = 3
		}
	}
}


has_dip_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_tooltip
		OR = {
			advisor = physician_adv
			advisor = explorer_adv
			advisor = artist_adv
			advisor = negotiator_adv
			advisor = emissary_adv
			advisor = taxman_advisor
			advisor = ship_builder
			advisor = cartograph
			advisor = naval_veteran
			advisor = foreign_advisor
			advisor = naval_reformer_adv
			advisor = naval_leader_adv
			advisor = governor
			advisor = diplomat_adv
		}
	}
}

has_dip_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_2_tooltip
		OR = {
			physician_adv = 2
			explorer_adv = 2
			artist_adv = 2
			negotiator_adv = 2
			emissary_adv = 2
			taxman_advisor = 2
			ship_builder = 2
			cartograph = 2
			naval_veteran = 2
			foreign_advisor = 2
			naval_reformer_adv = 2
			naval_leader_adv = 2
			governor = 2
			diplomat_adv = 2
		}
	}
}

has_dip_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_3_tooltip
		OR = {
			physician_adv = 3
			explorer_adv = 3
			artist_adv = 3
			negotiator_adv = 3
			emissary_adv = 3
			taxman_advisor = 3
			ship_builder = 3
			cartograph = 3
			naval_veteran = 3
			foreign_advisor = 3
			naval_reformer_adv = 3
			naval_leader_adv = 3
			governor = 3
			diplomat_adv = 3
		}
	}
}

#RIGHTS OF MAN TRIGGERS

#Ruler personality triggers
ruler_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = just_personality
		ruler_has_personality = righteous_personality
		ruler_has_personality = tolerant_personality
		ruler_has_personality = free_thinker_personality
		ruler_has_personality = calm_personality
		ruler_has_personality = zealot_personality
		ruler_has_personality = pious_personality
		ruler_has_personality = lawgiver_personality
		ruler_has_personality = midas_touched_personality
		ruler_has_personality = incorruptible_personality
		ruler_has_personality = architectural_visionary_personality
		ruler_has_personality = scholar_personality
	}
}

ruler_has_good_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = careful_personality
		ruler_has_personality = entrepreneur_personality
		ruler_has_personality = industrious_personality
		ruler_has_personality = expansionist_personality
		ruler_has_personality = navigator_personality
		ruler_has_personality = well_connected_personality
		ruler_has_personality = secretive_personality
		ruler_has_personality = intricate_web_weaver_personality
		ruler_has_personality = benevolent_personality
		ruler_has_personality = charismatic_negotiator_personality
		ruler_has_personality = silver_tongue_personality
	}
}

ruler_has_good_mil_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = bold_fighter_personality
		ruler_has_personality = tactical_genius_personality
		ruler_has_personality = fierce_negotiator_personality
		ruler_has_personality = conqueror_personality
		ruler_has_personality = strict_personality
		ruler_has_personality = inspiring_leader_personality
		ruler_has_personality = martial_educator_personality
		ruler_has_personality = kind_hearted_personality
	}
}

ruler_has_bad_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = embezzler_personality
		ruler_has_personality = sinner_personality
		ruler_has_personality = greedy_personality
		ruler_has_personality = obsessive_perfectionist_personality
	}
}

ruler_has_bad_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = drunkard_personality
		ruler_has_personality = babbling_buffoon_personality
		ruler_has_personality = cruel_personality
		ruler_has_personality = naive_personality
		ruler_has_personality = malevolent_personality
		ruler_has_personality = loose_lips_personality
	}
}

ruler_has_bad_mil_personality = {
	has_dlc = "Rights of Man"
	#OR = {
	ruler_has_personality = craven_personality
	#}
}

#Heir personality triggers
heir_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = just_personality
		heir_has_personality = righteous_personality
		heir_has_personality = tolerant_personality
		heir_has_personality = free_thinker_personality
		heir_has_personality = calm_personality
		heir_has_personality = zealot_personality
		heir_has_personality = pious_personality
		heir_has_personality = lawgiver_personality
		heir_has_personality = midas_touched_personality
		heir_has_personality = incorruptible_personality
		heir_has_personality = architectural_visionary_personality
		heir_has_personality = scholar_personality
	}
}

heir_has_good_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = careful_personality
		heir_has_personality = entrepreneur_personality
		heir_has_personality = industrious_personality
		heir_has_personality = expansionist_personality
		heir_has_personality = navigator_personality
		heir_has_personality = well_connected_personality
		heir_has_personality = secretive_personality
		heir_has_personality = intricate_web_weaver_personality
		heir_has_personality = benevolent_personality
		heir_has_personality = charismatic_negotiator_personality
		heir_has_personality = silver_tongue_personality

	}
}

heir_has_good_mil_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = bold_fighter_personality
		heir_has_personality = tactical_genius_personality
		heir_has_personality = fierce_negotiator_personality
		heir_has_personality = conqueror_personality
		heir_has_personality = strict_personality
		heir_has_personality = inspiring_leader_personality
		heir_has_personality = martial_educator_personality
		heir_has_personality = kind_hearted_personality
	}
}

heir_has_bad_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = embezzler_personality
		heir_has_personality = sinner_personality
		heir_has_personality = greedy_personality
		heir_has_personality = obsessive_perfectionist_personality
	}
}

heir_has_bad_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = drunkard_personality
		heir_has_personality = babbling_buffoon_personality
		heir_has_personality = cruel_personality
		heir_has_personality = naive_personality
		heir_has_personality = malevolent_personality
		heir_has_personality = loose_lips_personality
	}
}

heir_has_bad_mil_personality = {
	has_dlc = "Rights of Man"
	#OR = {
	heir_has_personality = craven_personality
	#}
}

#Queen personality triggers
consort_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = just_personality
		consort_has_personality = righteous_personality
		consort_has_personality = tolerant_personality
		consort_has_personality = free_thinker_personality
		consort_has_personality = calm_personality
		consort_has_personality = zealot_personality
		consort_has_personality = pious_personality
		consort_has_personality = lawgiver_personality
		consort_has_personality = midas_touched_personality
		consort_has_personality = incorruptible_personality
		consort_has_personality = architectural_visionary_personality
		consort_has_personality = scholar_personality
	}
}

consort_has_good_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = careful_personality
		consort_has_personality = entrepreneur_personality
		consort_has_personality = industrious_personality
		consort_has_personality = expansionist_personality
		consort_has_personality = navigator_personality
		consort_has_personality = well_connected_personality
		consort_has_personality = secretive_personality
		consort_has_personality = intricate_web_weaver_personality
		consort_has_personality = benevolent_personality
		consort_has_personality = charismatic_negotiator_personality
		consort_has_personality = silver_tongue_personality

	}
}

consort_has_good_mil_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = bold_fighter_personality
		consort_has_personality = tactical_genius_personality
		consort_has_personality = fierce_negotiator_personality
		consort_has_personality = conqueror_personality
		consort_has_personality = strict_personality
		consort_has_personality = inspiring_leader_personality
		consort_has_personality = martial_educator_personality
		consort_has_personality = kind_hearted_personality
	}
}

consort_has_bad_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = embezzler_personality
		consort_has_personality = sinner_personality
		consort_has_personality = greedy_personality
		consort_has_personality = obsessive_perfectionist_personality
	}
}

consort_has_bad_dip_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = drunkard_personality
		consort_has_personality = babbling_buffoon_personality
		consort_has_personality = cruel_personality
		consort_has_personality = naive_personality
		consort_has_personality = malevolent_personality
		consort_has_personality = loose_lips_personality
	}
}

consort_has_bad_mil_personality = {
	has_dlc = "Rights of Man"
	#OR = {
	consort_has_personality = craven_personality
	#}
}

can_have_center_of_reformation_trigger = { #Province Scope
	#$RELIGION$ needs to match the religion of the center that is being spawned.
	continent = asia
	OR = {
		religion_group = brahmin_group
		religion_group = persian_group
		religion = dacian_religion
		religion = getic_religion
		religion = thracian
	}
	is_in_capital_area = yes
	is_reformation_center = no
	is_island = no
	expelling_minorities = no
	development = 10
	NOT = { any_neighbor_province = { is_reformation_center = yes } }
	NOT = {
		any_province = {
			area = PREV
			is_reformation_center = yes
			religion = $RELIGION$
		}
	}
	NOT = { has_climate = arctic }
	NOT = { has_climate = arid }
	NOT = { has_terrain = coastal_desert }
	NOT = { has_terrain = desert }
	NOT = { has_terrain = desert_mountain }
	NOT = { has_terrain = salt_desert }
}

has_manufactory_trigger = { #Province Scope
	custom_trigger_tooltip = {
		tooltip = has_manufactory_trigger_tooltip
		OR = {
			has_building = horsebreeder
			has_building = lumberjack
			has_building = dyer
			has_building = farming_settlement
			has_building = shepherds
			has_building = apiary
			has_building = weavers
			has_building = tannery
			has_building = salt_gatherers
			has_building = miners_camp
			has_building = pottery
			has_building = glassmaker
			has_building = tar_pit
			has_building = blacksmith
		}
	}
}

#Use this one if you want it to say which manufactory has to be built
# Does not include 1.30 manufactories
has_manufactory_no_custom_tooltip_trigger = { #Province Scope
	if = {
		limit = { trade_goods = horses }
		has_building = horsebreeder
	}
	else_if = {
		limit = { trade_goods = naval_supplies }
		has_building = lumberjack
	}
	else_if = {
		limit = { trade_goods = dyes }
		has_building = dyer
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = grain
				trade_goods = olive
				trade_goods = herbs
				trade_goods = opium
				trade_goods = spices
				trade_goods = paper
				trade_goods = rice
				trade_goods = sugar
				trade_goods = fruits
				trade_goods = olibanum
			}
		}
		has_building = farming_settlement
	}
	else_if = {
		limit = { trade_goods = wine }
		has_building = winery
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = wool
				trade_goods = meat_animals
			}
		}
		has_building = shepherds
	}
	else_if = {
		limit = { trade_goods = honey }
		has_building = apiary
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = cloth
				trade_goods = silk
				trade_goods = cotton
			}
		}
		has_building = weavers
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = fish
				trade_goods = amber
				trade_goods = pearls
			}
		}
		has_building = fishermen_huts
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = exotic_animals
				trade_goods = ivory
				trade_goods = fur
			}
		}
		has_building = tannery
	}
	else_if = {
		limit = { trade_goods = salt }
		has_building = salt_gatherers
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = copper
				trade_goods = iron
				trade_goods = marble
				trade_goods = lead
				trade_goods = jade
				trade_goods = tin
				trade_goods = gems
			}
		}
		has_building = miners_camp
	}
	else_if = {
		limit = { trade_goods = ceramic }
		has_building = pottery
	}
	else_if = {
		limit = { trade_goods = glas }
		has_building = glassmaker
	}
	else_if = {
		limit = { trade_goods = tar_good }
		has_building = tar_pit
	}
	else = { has_building = blacksmith }
}

has_no_manufactory_trigger = { #Province Scope
	NOT = { has_building = horsebreeder }
	NOT = { has_building = lumberjack }
	NOT = { has_building = dyer }
	NOT = { has_building = farming_settlement }
	NOT = { has_building = winery }
	NOT = { has_building = shepherds }
	NOT = { has_building = apiary }
	NOT = { has_building = weavers }
	NOT = { has_building = fishermen_huts }
	NOT = { has_building = tannery }
	NOT = { has_building = salt_gatherers }
	NOT = { has_building = miners_camp }
	NOT = { has_building = pottery }
	NOT = { has_building = glassmaker }
	NOT = { has_building = tar_pit }
	NOT = { has_building = blacksmith }
}

# Does not include new manufactories - they don't fit for the purposes of this trigger
root_can_build_manufactory_here_trigger = {
	has_no_manufactory_trigger = yes
	num_free_building_slots = 1
	OR = {
		AND = {
			trade_goods = horses
			ROOT = { mil_tech = 11 }
		}
		AND = {
			trade_goods = naval_supplies
			ROOT = { adm_tech = 9 }
		}
		AND = {
			trade_goods = dyes
			ROOT = { adm_tech = 14 }
		}
		AND = {
			OR = {
				trade_goods = grain
				trade_goods = olive
				trade_goods = herbs
				trade_goods = opium
				trade_goods = spices
				trade_goods = paper
				trade_goods = rice
				trade_goods = sugar
				trade_goods = fruits
				trade_goods = olibanum
				trade_goods = tea_good
			}
			ROOT = { adm_tech = 1 }
		}
		AND = {
			trade_goods = wine
			ROOT = { adm_tech = 2 }
		}
		AND = {
			OR = {
				trade_goods = wool
				trade_goods = meat_animals
			}
			ROOT = { adm_tech = 1 }
		}
		AND = {
			trade_goods = honey
			ROOT = { adm_tech = 7 }
		}
		AND = {
			OR = {
				trade_goods = cloth
				trade_goods = silk
				trade_goods = cotton
			}
			ROOT = { adm_tech = 6 }
		}
		AND = {
			OR = {
				trade_goods = fish
				trade_goods = amber
				trade_goods = pearls
			}
			ROOT = { adm_tech = 1 }
		}
		AND = {
			OR = {
				trade_goods = exotic_animals
				trade_goods = ivory
				trade_goods = fur
			}
			ROOT = { adm_tech = 6 }
		}
		AND = {
			trade_goods = salt
			ROOT = { adm_tech = 4 }
		}
		AND = {
			OR = {
				trade_goods = copper
				trade_goods = iron
				trade_goods = marble
				trade_goods = lead
				trade_goods = jade
				trade_goods = tin
				trade_goods = gems
			}
			ROOT = { adm_tech = 4 }
		}
		AND = {
			trade_goods = ceramic
			ROOT = { adm_tech = 6 }
		}
		AND = {
			trade_goods = glas
			ROOT = { adm_tech = 6 }
		}
		AND = {
			trade_goods = tar_good
			ROOT = { adm_tech = 9 }
		}
		AND = {
			trade_goods = metalware
			ROOT = { adm_tech = 10 }
		}
	}
}

# This is for when we want to award government reform progress and need to check if that's useful to the player based on dlc ownership
has_completed_all_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		NOT = { has_dlc = "Origins" }
		OR = {
			has_reform = stay_nomadic_reform
			has_reform = mantain_tribal_structures_reform
			has_reform = mantain_oligarchical_traditions_reform
			has_reform = reinforce_danda_niti_reform
			has_reform = republican_consciousness_reform
			has_reform = monarchy_reinforce_king_reform
			has_reform = centralization_1
			has_reform = centralization_2
			has_reform = centralization_3
			has_reform = centralization_4
			has_reform = decentralization_1
			has_reform = decentralization_2
			has_reform = decentralization_3
			has_reform = decentralization_4
		}
	}
}

# This is for all other situations
has_final_tier_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		OR = {
			has_reform = mantain_tribal_structures_reform
			has_reform = mantain_oligarchical_traditions_reform
			has_reform = reinforce_danda_niti_reform
			has_reform = republican_consciousness_reform
			has_reform = monarchy_reinforce_king_reform
			has_reform = centralization_1
			has_reform = centralization_2
			has_reform = centralization_3
			has_reform = centralization_4
			has_reform = decentralization_1
			has_reform = decentralization_2
			has_reform = decentralization_3
			has_reform = decentralization_4
		}
	}
}

has_holy_order_trigger = {
	custom_trigger_tooltip = {
		tooltip = "has_holy_order_trigger_tooltip"
		OR = {
			holy_order = jesuit_order
			holy_order = dominican_order
			holy_order = franciscan_order
			holy_order = shadhili_order
			holy_order = qadiri_order
			holy_order = aissawa_order
		}
	}
}

same_govt_as_root_trigger = {
	custom_trigger_tooltip = {
		tooltip = same_govt_as_root_tt
		OR = {
			AND = {
				government = theocracy
				root = { government = theocracy }
			}
			AND = {
				government = monarchy
				root = { government = monarchy }
			}
			AND = {
				government = republic
				root = { government = republic }
			}
			AND = {
				government = dictatorship
				root = { government = dictatorship }
			}
			AND = {
				government = tribal
				root = { government = tribal }
			}
			AND = {
				government = native
				root = { government = native }
			}
		}
	}
}


has_been_insulted_by_root = {
	custom_trigger_tooltip = {
		tooltip = has_been_insulted_by_root
		OR = {
			has_opinion_modifier = {
				who = ROOT
				modifier = insulted
			}
			has_opinion_modifier = {
				who = ROOT
				modifier = scornfully_insulted
			}
		}
	}
}

valid_for_personal_unions_trigger = {
	is_subject = no
	government = monarchy
}

is_shadow_kingdom_eligible_trigger = {}

will_leave_for_shadow_kingdom_trigger = {}

# Has current fort level
province_has_current_tech_fort_trigger = {
	custom_trigger_tooltip = {
		tooltip = province_has_current_tech_fort_trigger_tt
		if = {
			limit = { owner = { NOT = { mil_tech = 13 } } }
			has_building = wood_city_walls
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 13
						NOT = { mil_tech = 22 }
					}
				}
			}
			has_building = stone_city_walls
		}
		else_if = {
			limit = { owner = { mil_tech = 22 } }
			has_building = turreted_city_walls
		}
	}
}



check_reducing_estate_revolt_size_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 16 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 24 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 36 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 56 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 80 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 100 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 7
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 8
				has_province_flag = $FLAG$
			}
		}
	}
}

check_reducing_estate_revolt_size_more_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 10 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 16 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 24 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 36 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
}

is_revolutionary_republic_trigger = {}

revolution_event_can_happen_trigger = {}
#country scope, used in election events to check whether generated rulers may be female
republic_with_female_rulers_trigger = {}

is_absolutism_active = {
	always = yes
}

#Country scope
is_or_was_tag = {
	OR = {
		tag = $tag$
		was_tag = $tag$
	}
}

has_any_colonist_idea = {
	OR = {
		has_idea = colonies_idea
		has_idea = roman_empire_3
		has_idea = central_african_5
	}
}

has_completed_idea_group_of_category = {
	[[adm_ideas]
	custom_trigger_tooltip = {
		tooltip = has_completed_one_adm_idea_group
		OR = {
			full_idea_group = administrative_ideas
			full_idea_group = academy_ideas
			full_idea_group = royal_court_ideas
			full_idea_group = republican_government_ideas
			full_idea_group = oligarchic_ideas
			full_idea_group = tribal_government_ideas
			full_idea_group = engineering_ideas
			full_idea_group = cerimonial_ideas
			full_idea_group = domestic_government_ideas
			full_idea_group = financial_ideas
			full_idea_group = agraculture_ideas
			full_idea_group = assimilation_ideas
		}
	}
	]
	[[dip_ideas]
	custom_trigger_tooltip = {
		tooltip = has_completed_one_dip_idea_group
		OR = {
			full_idea_group = maritime_trade_ideas
			full_idea_group = caravan_trade_ideas
			full_idea_group = expansion_ideas
			full_idea_group = diplomatic_ideas
			full_idea_group = maritime_ideas
			full_idea_group = shipbuilding_ideas
			full_idea_group = imperial_ideas
			full_idea_group = syncretism_ideas
			full_idea_group = propaganda_ideas
		}
	}
	]
	[[mil_ideas]
	custom_trigger_tooltip = {
		tooltip = has_completed_one_mil_idea_group
		OR = {
			full_idea_group = infantry_ideas
			full_idea_group = cavalry_ideas
			full_idea_group = naval_ideas
			full_idea_group = raider_ideas
			full_idea_group = mercenary_ideas
			full_idea_group = leadership_ideas
			full_idea_group = fortress_ideas
			full_idea_group = logistic_ideas
			full_idea_group = skirmisher_ideas
		}
	}
	]
}

has_religion_of_increased_opinion_for_scope = {}

reverse_has_religion_of_increased_opinion_for_scope = {}

mal_will_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				alliance_with = ROOT
				is_subject_of = ROOT
				has_opinion = {
					who = ROOT
					value = 100
				}
			}
		}
	}
}

mal_very_highly_to_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = 50
			}
		}
	}
}

mal_might_or_might_not_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = -50
			}
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_very_likely_to_not_accept_offer = {
	$province$ = {
		owner = {
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_will_never_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				is_rival = ROOT
				is_enemy = ROOT
				NOT = {
					has_opinion = {
						who = ROOT
						value = 100
					}
				}
			}
		}
	}
}

has_any_heir_cult_active = {}

gained_development_from_building = {
	has_province_flag = built_dev_$building$
}

gained_development_from_any_building = {}

has_primary_cult = {
	has_country_flag = has_$cult$_as_primary_cult
}

has_a_primary_cult_selected = {
	custom_trigger_tooltip = {
		tooltip = has_a_primary_cult_selected_tt
		has_country_flag = has_selected_a_primary_cult
	}
}

has_better_tech_than_westerns = {}

has_more_institutions_than_westerns = {}

has_unlocked_estate_privilege = {
	has_country_flag = unlocked_privilege_$estate_privilege$
}

has_unlocked_merc_company = {
	has_country_flag = unlocked_$merc_company$
}

mal_target_country_exists_in_region = {}

mal_owns_provinces_in_region = {}

province_is_or_accepts_culture = {
	OR = {
		has_owner_culture = yes
		has_owner_accepted_culture = yes
	}
}

secondary_religion_group = {
	[[eastern_religions]
	OR = {
		secondary_religion = muism
		secondary_religion = shinto
		secondary_religion = aslian_shamanism
		secondary_religion = southern_mythology
		secondary_religion = austronesian_religion
		secondary_religion = burmese_religion
		secondary_religion = tengri
		secondary_religion = bon_religion
		secondary_religion = wuism
		secondary_religion = white_tiger_religion
		secondary_religion = liuqiuan_religion
	}
	]
	[[brahmin_group]
	OR = {
		secondary_religion = hinduism
		secondary_religion = brahmin
		secondary_religion = sramana
		secondary_religion = buddhism
		secondary_religion = jain
		secondary_religion = ajivika
	}
	]
	[[pagan_group]
	OR = {
		secondary_religion = roman_religion
		secondary_religion = etruscan_religion
		secondary_religion = helleno_scythian
		secondary_religion = roman_religion
		secondary_religion = minoan_religion
		secondary_religion = greek_religion
		secondary_religion = veneti_religion
		secondary_religion = cybele
		secondary_religion = illyrian_religion
		secondary_religion = thracian
		secondary_religion = dacian_religion
		secondary_religion = germanic_religion
		secondary_religion = celtic_religion
		secondary_religion = baltic_religion
		secondary_religion = slavic_religion
		secondary_religion = iberian_religion
		secondary_religion = nuragic_religion
		secondary_religion = ligurian_religion
		secondary_religion = numidian_religion
		secondary_religion = egyptian_religion
		secondary_religion = atenism
		secondary_religion = east_african
		secondary_religion = awsan_religion
		secondary_religion = west_african
		secondary_religion = arab_religion
		secondary_religion = punic_religion
		secondary_religion = mesopotamian_religion
		secondary_religion = luwian_religion
		secondary_religion = elamite_religion
		secondary_religion = armenian_religion
		secondary_religion = skneli
		secondary_religion = finno_ugric_religion
		secondary_religion = getic_religion
		secondary_religion = aquitanian_religion
	}
	]
	[[jewish_group]
	OR = {
		secondary_religion = jewish
		secondary_religion = samaritan_religion
		secondary_religion = christian
	}
	]
	[[persian_group]
	secondary_religion = zoroastrianism
	secondary_religion = iranian_religion
	secondary_religion = zurvanism
	secondary_religion = scythian_religion
	secondary_religion = sarmatian_religion
	secondary_religion = tocharian_religion
	]
}

province_is_or_accepts_religion_group = {
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion_group$_tt
		OR = {
			AND = {
				religion_group = $religion_group$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion_group = { $religion_group$ = yes } }
				OR = {
					religion_group = $religion_group$
					has_owner_religion = yes
				}
			}
		}
	}
}

province_is_or_accepts_religion = {
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion$_tt
		OR = {
			AND = {
				religion = $religion$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion = $religion$ }
				OR = {
					religion = $religion$
					has_owner_religion = yes
				}
			}
		}
	}
}

#country scope
ruler_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
			who = $who$
		}
		change_variable = {
			which = ruler_adm
			which = ruler_dip
		}
		change_variable = {
			which = ruler_adm
			which = ruler_mil
		}
		check_variable = {
			which = ruler_adm
			value = $stats$
		}
	}
}

ruler_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
			who = $who$
		}
		change_variable = {
			which = ruler_adm
			which = ruler_dip
		}
		change_variable = {
			which = ruler_adm
			which = ruler_mil
		}
		check_variable = {
			which = ruler_adm
			value = $stats$
		}
	}
}

heir_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = heir_adm_var
			value = heir_adm
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_dip_var
			value = heir_dip
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_mil_var
			value = heir_mil
			who = $who$
		}
		change_variable = {
			which = heir_adm_var
			which = heir_dip_var
		}
		change_variable = {
			which = heir_adm_var
			which = heir_mil_var
		}
		check_variable = {
			which = heir_adm_var
			value = $stats$
		}
	}
}

heir_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = heir_adm_var
			value = heir_adm
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_dip_var
			value = heir_dip
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_mil_var
			value = heir_mil
			who = $who$
		}
		change_variable = {
			which = heir_adm_var
			which = heir_dip_var
		}
		change_variable = {
			which = heir_adm_var
			which = heir_mil_var
		}
		check_variable = {
			which = heir_adm_var
			value = $stats$
		}
	}
}

consort_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = consort_total_stats_$stats$
		export_to_variable = {
			variable_name = consort_adm_var
			value = consort_adm
			who = ROOT
		}
		export_to_variable = {
			variable_name = consort_dip_var
			value = consort_dip
			who = ROOT
		}
		export_to_variable = {
			variable_name = consort_mil_var
			value = consort_mil
			who = ROOT
		}
		change_variable = {
			which = consort_adm_var
			which = consort_dip_var
		}
		change_variable = {
			which = consort_adm_var
			which = consort_mil_var
		}
		check_variable = {
			which = consort_adm_var
			value = $stats$
		}
	}
}

consort_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = consort_adm_var
			value = consort_adm
			who = $who$
		}
		export_to_variable = {
			variable_name = consort_dip_var
			value = consort_dip
			who = $who$
		}
		export_to_variable = {
			variable_name = consort_mil_var
			value = consort_mil
			who = $who$
		}
		change_variable = {
			which = consort_adm_var
			which = consort_dip_var
		}
		change_variable = {
			which = consort_adm_var
			which = consort_mil_var
		}
		check_variable = {
			which = consort_adm_var
			value = $stats$
		}
	}
}

num_of_ruler_traits = {
	calc_true_if = {
		desc = num_of_ruler_traits_tt
		ruler_has_personality = just_personality
		ruler_has_personality = righteous_personality
		ruler_has_personality = tolerant_personality
		ruler_has_personality = kind_hearted_personality
		ruler_has_personality = free_thinker_personality
		ruler_has_personality = well_connected_personality
		ruler_has_personality = calm_personality
		ruler_has_personality = careful_personality
		ruler_has_personality = secretive_personality
		ruler_has_personality = intricate_web_weaver_personality
		ruler_has_personality = fertile_personality
		ruler_has_personality = well_advised_personality
		ruler_has_personality = benevolent_personality
		ruler_has_personality = zealot_personality
		ruler_has_personality = pious_personality
		ruler_has_personality = lawgiver_personality
		ruler_has_personality = midas_touched_personality
		ruler_has_personality = incorruptible_personality
		ruler_has_personality = architectural_visionary_personality
		ruler_has_personality = scholar_personality
		ruler_has_personality = entrepreneur_personality
		ruler_has_personality = industrious_personality
		ruler_has_personality = expansionist_personality
		ruler_has_personality = charismatic_negotiator_personality
		ruler_has_personality = silver_tongue_personality
		ruler_has_personality = conqueror_personality
		ruler_has_personality = tactical_genius_personality
		ruler_has_personality = bold_fighter_personality
		ruler_has_personality = strict_personality
		ruler_has_personality = inspiring_leader_personality
		ruler_has_personality = martial_educator_personality
		ruler_has_personality = navigator_personality
		ruler_has_personality = fierce_negotiator_personality
		ruler_has_personality = babbling_buffoon_personality
		ruler_has_personality = embezzler_personality
		ruler_has_personality = infertile_personality
		ruler_has_personality = drunkard_personality
		ruler_has_personality = sinner_personality
		ruler_has_personality = greedy_personality
		ruler_has_personality = cruel_personality
		ruler_has_personality = naive_personality
		ruler_has_personality = craven_personality
		ruler_has_personality = loose_lips_personality
		ruler_has_personality = obsessive_perfectionist_personality
		ruler_has_personality = malevolent_personality
		ruler_has_personality = immortal_personality
		ruler_has_personality = legendary_pirate_personality
		ruler_has_personality = reformist_personality
		ruler_has_personality = raider_personality
		ruler_has_personality = legendary_leader_personality
		ruler_has_personality = administrator_personality
		ruler_has_personality = aggressive_personality
		ruler_has_personality = the_great_personality
		ruler_has_personality = ambitious_senator
		ruler_has_personality = mastermind_personality
		ruler_has_personality = horse_lover_personality
		ruler_has_personality = little_tyrant_personality
		ruler_has_personality = arbitrarily_personality
		ruler_has_personality = lazy_personality
		ruler_has_personality = stubborn_personality
		ruler_has_personality = lunatic_personality
		ruler_has_personality = frail_personality
		ruler_has_personality = chauvinist_personality
		amount = $amount$
	}
}

has_any_active_incomplete_idea_group_of_category = {
	[[adm_ideas]
	custom_trigger_tooltip = {
		tooltip = has_any_active_incomplete_idea_group_of_category_adm
		OR = {
			AND = { has_idea_group = administrative_ideas NOT = { full_idea_group = administrative_ideas } }
			AND = { has_idea_group = academy_ideas      NOT = { full_idea_group = academy_ideas } }
			AND = { has_idea_group = royal_court_ideas       NOT = { full_idea_group = royal_court_ideas } }
			AND = { has_idea_group = republican_government_ideas      NOT = { full_idea_group = republican_government_ideas } }
			AND = { has_idea_group = oligarchic_ideas NOT = { full_idea_group = oligarchic_ideas } }
			AND = { has_idea_group = tribal_government_ideas       NOT = { full_idea_group = tribal_government_ideas } }
			AND = { has_idea_group = engineering_ideas NOT = { full_idea_group = engineering_ideas } }
			AND = { has_idea_group = cerimonial_ideas NOT = { full_idea_group = cerimonial_ideas } }
			AND = { has_idea_group = domestic_government_ideas NOT = { full_idea_group = domestic_government_ideas } }
			AND = { has_idea_group = financial_ideas NOT = { full_idea_group = financial_ideas } }
			AND = { has_idea_group = agraculture_ideas NOT = { full_idea_group = agraculture_ideas } }
			AND = { has_idea_group = assimilation_ideas NOT = { full_idea_group = assimilation_ideas } }
		}
	}
	]
	[[dip_ideas]
	custom_trigger_tooltip = {
		tooltip = has_any_active_incomplete_idea_group_of_category_dip
		OR = {
			AND = { has_idea_group = maritime_trade_ideas         	NOT = { full_idea_group = maritime_trade_ideas } }
			AND = { has_idea_group = caravan_trade_ideas  	NOT = { full_idea_group = caravan_trade_ideas } }
			AND = { has_idea_group = expansion_ideas       	NOT = { full_idea_group = expansion_ideas } }
			AND = { has_idea_group = diplomatic_ideas 	NOT = { full_idea_group = diplomatic_ideas } }
			AND = { has_idea_group = maritime_ideas    	NOT = { full_idea_group = maritime_ideas } }
			AND = { has_idea_group = shipbuilding_ideas   	NOT = { full_idea_group = shipbuilding_ideas } }
			AND = { has_idea_group = imperial_ideas       	NOT = { full_idea_group = imperial_ideas } }
			AND = { has_idea_group = syncretism_ideas       	NOT = { full_idea_group = syncretism_ideas } }
			AND = { has_idea_group = propaganda_ideas       	NOT = { full_idea_group = propaganda_ideas } }
		}
	}
	]
	[[mil_ideas]
	custom_trigger_tooltip = {
		tooltip = has_any_active_incomplete_idea_group_of_category_mil
		OR = {
			AND = { has_idea_group = infantry_ideas       	NOT = { full_idea_group = infantry_ideas } }
			AND = { has_idea_group = cavalry_ideas       		NOT = { full_idea_group = cavalry_ideas } }
			AND = { has_idea_group = naval_ideas       		NOT = { full_idea_group = naval_ideas } }
			AND = { has_idea_group = raider_ideas           	NOT = { full_idea_group = raider_ideas } }
			AND = { has_idea_group = mercenary_ideas             NOT = { full_idea_group = mercenary_ideas } }
			AND = { has_idea_group = leadership_ideas   		NOT = { full_idea_group = leadership_ideas } }
			AND = { has_idea_group = fortress_ideas      	    NOT = { full_idea_group = fortress_ideas } }
			AND = { has_idea_group = logistic_ideas       	    NOT = { full_idea_group = logistic_ideas } }
			AND = { has_idea_group = skirmisher_ideas        	NOT = { full_idea_group = skirmisher_ideas } }
		}
	}
	]
}

has_unlocked_church_aspect = {
	has_country_flag = unlocked_church_aspect_$church_aspect$
}

has_increased_trade_goods_discovery = {
	has_country_flag = increased_trade_goods_discovery_$trade_goods$
}

has_branching_missions = {}

has_preview_mission_flag = {
	check_variable = {
		which = can_preview_missions_var
		value = 1
	}
}

can_preview_batch = {
	has_country_flag = has_batch_$batch$_active
}

can_preview_mission_of_key_and_batch = {
	has_country_flag = can_choose_$key$_$batch$_branching_missions
}
can_preview_mission_of_key = {
	or = {
		can_preview_mission_of_key_and_batch = { key = $key$ batch = 1 }
		can_preview_mission_of_key_and_batch = { key = $key$ batch = 2 }
		can_preview_mission_of_key_and_batch = { key = $key$ batch = 3 }
	}
}
can_preview_missions = {
	custom_trigger_tooltip = {
		tooltip = preview_missions_decision_ct
	}
}

not_in_mission_preview_mode = {
	if = {
		limit = {
			check_variable = {
				which = can_preview_missions_var
				value = 1
			}
			can_preview_mission_of_key = { key = $key$ }
		}
		custom_trigger_tooltip = {
			tooltip = BYZ_we_are_in_preview
			always = no
		}
	}
}

has_selected_a_branch = {
	custom_trigger_tooltip = {
		tooltip = has_selected_a_branch_tt
	}
}

num_of_mission_branches_3 = {}

num_of_mission_branches_4 = {}

num_of_mission_branches_5 = {
	always = no
	has_country_flag = has_$batch$_batch	#Dummy
}
num_of_mission_branches = {
	num_of_mission_branches_$value$ = { batch = $batch$ }
}

currently_selected_branch_1 = {}
currently_selected_branch_2 = {}
currently_selected_branch_3 = {}
currently_selected_branch_4 = {}
currently_selected_branch_5 = {
	always = no
	has_country_flag = has_$batch$_batch	#dummy
}
currently_selected_branch = {
	currently_selected_branch_$value$ = { batch = $batch$ }
}

can_select_branch_1 = {}
can_select_branch_2 = {}
can_select_branch_3 = {}
can_select_branch_4 = {}
can_select_branch_5 = {
	hidden_trigger = { or = { always = yes has_country_flag = has_$batch$_batch } }
}
can_select_branch = {
	can_select_branch_$value$ = { batch = $batch$ }
}

is_europe_inactive = {
	has_global_flag = picked_disable_britannia_superregion_flag
	has_global_flag = picked_disable_hispania_superregion_flag
	has_global_flag = picked_disable_italia_superregion_flag
	has_global_flag = picked_disable_celtica_superregion_flag
	has_global_flag = picked_disable_germania_superregion_flag
	has_global_flag = picked_disable_haemusia_superregion_flag
	has_global_flag = picked_disable_macedonia_superregion_flag
	has_global_flag = picked_disable_scythia_superregion_flag
}

is_africa_inactive = {
	has_global_flag = picked_disable_western_africa_superregion_flag
	has_global_flag = picked_disable_eastern_africa_superregion_flag
	has_global_flag = picked_disable_aethiopia_superregion_flag
}

is_western_asia_inactive = {
	has_global_flag = picked_disable_asia_superregion_flag
	has_global_flag = picked_disable_armenia_superregion_flag
	has_global_flag = picked_disable_syria_superregion_flag
	has_global_flag = picked_disable_mesopotamia_superregion_flag
	has_global_flag = picked_disable_iran_superregion_flag
	has_global_flag = picked_disable_arabia_superregion_flag
	has_global_flag = picked_disable_parthia_superregion_flag
	has_global_flag = picked_disable_sakastan_superregion_flag
}

is_eastern_asia_inactive = {
	has_global_flag = picked_disable_china_superregion_flag
	has_global_flag = picked_disable_korea_superregion_flag
	has_global_flag = picked_disable_turan_superregion_flag
	has_global_flag = picked_disable_chryse_insula_superregion_flag
	has_global_flag = picked_disable_japan_superregion_flag
}

is_southern_asia_inactive = {
	has_global_flag = picked_disable_uttarapatha_superregion_flag
	has_global_flag = picked_disable_dakshinapatha_superregion_flag
	has_global_flag = picked_disable_tibet_superregion_flag
	has_global_flag = picked_disable_suvarnabhumi_superregion_flag
}
