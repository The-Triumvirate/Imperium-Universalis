


slaves_remove_basic_modifiers = {
	if = { limit = { has_country_modifier = slaves_ratio_00 }  remove_country_modifier = slaves_ratio_00 }
	if = { limit = { has_country_modifier = slaves_ratio_20 }  remove_country_modifier = slaves_ratio_20 }
	if = { limit = { has_country_modifier = slaves_ratio_40 }  remove_country_modifier = slaves_ratio_40 }
	if = { limit = { has_country_modifier = slaves_ratio_60 }  remove_country_modifier = slaves_ratio_60 }
	if = { limit = { has_country_modifier = slaves_ratio_80 }  remove_country_modifier = slaves_ratio_80 }
	if = { limit = { has_country_modifier = slaves_ratio_100 } remove_country_modifier = slaves_ratio_100 }
	if = { limit = { has_country_modifier = slaves_ratio_120 } remove_country_modifier = slaves_ratio_120 }
	if = { limit = { has_country_modifier = slaves_ratio_150 } remove_country_modifier = slaves_ratio_150 }
	if = { limit = { has_country_modifier = slaves_ratio_200 } remove_country_modifier = slaves_ratio_200 }
	if = { limit = { has_country_modifier = slaves_ratio_250 } remove_country_modifier = slaves_ratio_250 }


}

slaves_remove_complex_modifiers = {
	# Flags
	clr_country_flag = slaves_x1		clr_country_flag = slaves_x2		clr_country_flag = slaves_x3
	clr_country_flag = slaves_x4		clr_country_flag = slaves_x5		clr_country_flag = slaves_x6
	clr_country_flag = slaves_x7
	clr_country_flag = slaves_y1		clr_country_flag = slaves_y6		clr_country_flag = slaves_y11
	clr_country_flag = slaves_y2		clr_country_flag = slaves_y7		clr_country_flag = slaves_y12
	clr_country_flag = slaves_y3		clr_country_flag = slaves_y8		clr_country_flag = slaves_y13
	clr_country_flag = slaves_y4		clr_country_flag = slaves_y9		clr_country_flag = slaves_y14
	clr_country_flag = slaves_y5		clr_country_flag = slaves_y10		clr_country_flag = slaves_y15

	# Block x = 1
	if = { limit = { has_country_modifier = slaves_share_x1y1 }  remove_country_modifier = slaves_share_x1y1 }
	if = { limit = { has_country_modifier = slaves_share_x1y2 }  remove_country_modifier = slaves_share_x1y2 }
	if = { limit = { has_country_modifier = slaves_share_x1y3 }  remove_country_modifier = slaves_share_x1y3 }
	if = { limit = { has_country_modifier = slaves_share_x1y4 }  remove_country_modifier = slaves_share_x1y4 }
	if = { limit = { has_country_modifier = slaves_share_x1y5 }  remove_country_modifier = slaves_share_x1y5 }

	if = { limit = { has_country_modifier = slaves_share_x1y6 }  remove_country_modifier = slaves_share_x1y6 }
	if = { limit = { has_country_modifier = slaves_share_x1y7 }  remove_country_modifier = slaves_share_x1y7 }
	if = { limit = { has_country_modifier = slaves_share_x1y8 }  remove_country_modifier = slaves_share_x1y8 }
	if = { limit = { has_country_modifier = slaves_share_x1y9 }  remove_country_modifier = slaves_share_x1y9 }
	if = { limit = { has_country_modifier = slaves_share_x1y10 }  remove_country_modifier = slaves_share_x1y10 }

	if = { limit = { has_country_modifier = slaves_share_x1y11 }  remove_country_modifier = slaves_share_x1y11 }
	if = { limit = { has_country_modifier = slaves_share_x1y12 }  remove_country_modifier = slaves_share_x1y12 }
	if = { limit = { has_country_modifier = slaves_share_x1y13 }  remove_country_modifier = slaves_share_x1y13 }
	if = { limit = { has_country_modifier = slaves_share_x1y14 }  remove_country_modifier = slaves_share_x1y14 }
	if = { limit = { has_country_modifier = slaves_share_x1y15 }  remove_country_modifier = slaves_share_x1y15 }

	# Block x = 2
	if = { limit = { has_country_modifier = slaves_share_x2y1 }  remove_country_modifier = slaves_share_x2y1 }
	if = { limit = { has_country_modifier = slaves_share_x2y2 }  remove_country_modifier = slaves_share_x2y2 }
	if = { limit = { has_country_modifier = slaves_share_x2y3 }  remove_country_modifier = slaves_share_x2y3 }
	if = { limit = { has_country_modifier = slaves_share_x2y4 }  remove_country_modifier = slaves_share_x2y4 }
	if = { limit = { has_country_modifier = slaves_share_x2y5 }  remove_country_modifier = slaves_share_x2y5 }

	if = { limit = { has_country_modifier = slaves_share_x2y6 }  remove_country_modifier = slaves_share_x2y6 }
	if = { limit = { has_country_modifier = slaves_share_x2y7 }  remove_country_modifier = slaves_share_x2y7 }
	if = { limit = { has_country_modifier = slaves_share_x2y8 }  remove_country_modifier = slaves_share_x2y8 }
	if = { limit = { has_country_modifier = slaves_share_x2y9 }  remove_country_modifier = slaves_share_x2y9 }
	if = { limit = { has_country_modifier = slaves_share_x2y10 }  remove_country_modifier = slaves_share_x2y10 }

	if = { limit = { has_country_modifier = slaves_share_x2y11 }  remove_country_modifier = slaves_share_x2y11 }
	if = { limit = { has_country_modifier = slaves_share_x2y12 }  remove_country_modifier = slaves_share_x2y12 }
	if = { limit = { has_country_modifier = slaves_share_x2y13 }  remove_country_modifier = slaves_share_x2y13 }
	if = { limit = { has_country_modifier = slaves_share_x2y14 }  remove_country_modifier = slaves_share_x2y14 }
	if = { limit = { has_country_modifier = slaves_share_x2y15 }  remove_country_modifier = slaves_share_x2y15 }

	# Block x = 3
	if = { limit = { has_country_modifier = slaves_share_x3y1 }  remove_country_modifier = slaves_share_x3y1 }
	if = { limit = { has_country_modifier = slaves_share_x3y2 }  remove_country_modifier = slaves_share_x3y2 }
	if = { limit = { has_country_modifier = slaves_share_x3y3 }  remove_country_modifier = slaves_share_x3y3 }
	if = { limit = { has_country_modifier = slaves_share_x3y4 }  remove_country_modifier = slaves_share_x3y4 }
	if = { limit = { has_country_modifier = slaves_share_x3y5 }  remove_country_modifier = slaves_share_x3y5 }

	if = { limit = { has_country_modifier = slaves_share_x3y6 }  remove_country_modifier = slaves_share_x3y6 }
	if = { limit = { has_country_modifier = slaves_share_x3y7 }  remove_country_modifier = slaves_share_x3y7 }
	if = { limit = { has_country_modifier = slaves_share_x3y8 }  remove_country_modifier = slaves_share_x3y8 }
	if = { limit = { has_country_modifier = slaves_share_x3y9 }  remove_country_modifier = slaves_share_x3y9 }
	if = { limit = { has_country_modifier = slaves_share_x3y10 }  remove_country_modifier = slaves_share_x3y10 }

	if = { limit = { has_country_modifier = slaves_share_x3y11 }  remove_country_modifier = slaves_share_x3y11 }
	if = { limit = { has_country_modifier = slaves_share_x3y12 }  remove_country_modifier = slaves_share_x3y12 }
	if = { limit = { has_country_modifier = slaves_share_x3y13 }  remove_country_modifier = slaves_share_x3y13 }
	if = { limit = { has_country_modifier = slaves_share_x3y14 }  remove_country_modifier = slaves_share_x3y14 }
	if = { limit = { has_country_modifier = slaves_share_x3y15 }  remove_country_modifier = slaves_share_x3y15 }

	# Block x = 4
	if = { limit = { has_country_modifier = slaves_share_x4y1 }  remove_country_modifier = slaves_share_x4y1 }
	if = { limit = { has_country_modifier = slaves_share_x4y2 }  remove_country_modifier = slaves_share_x4y2 }
	if = { limit = { has_country_modifier = slaves_share_x4y3 }  remove_country_modifier = slaves_share_x4y3 }
	if = { limit = { has_country_modifier = slaves_share_x4y4 }  remove_country_modifier = slaves_share_x4y4 }
	if = { limit = { has_country_modifier = slaves_share_x4y5 }  remove_country_modifier = slaves_share_x4y5 }

	if = { limit = { has_country_modifier = slaves_share_x4y6 }  remove_country_modifier = slaves_share_x4y6 }
	if = { limit = { has_country_modifier = slaves_share_x4y7 }  remove_country_modifier = slaves_share_x4y7 }
	if = { limit = { has_country_modifier = slaves_share_x4y8 }  remove_country_modifier = slaves_share_x4y8 }
	if = { limit = { has_country_modifier = slaves_share_x4y9 }  remove_country_modifier = slaves_share_x4y9 }
	if = { limit = { has_country_modifier = slaves_share_x4y10 }  remove_country_modifier = slaves_share_x4y10 }

	if = { limit = { has_country_modifier = slaves_share_x4y11 }  remove_country_modifier = slaves_share_x4y11 }
	if = { limit = { has_country_modifier = slaves_share_x4y12 }  remove_country_modifier = slaves_share_x4y12 }
	if = { limit = { has_country_modifier = slaves_share_x4y13 }  remove_country_modifier = slaves_share_x4y13 }
	if = { limit = { has_country_modifier = slaves_share_x4y14 }  remove_country_modifier = slaves_share_x4y14 }
	if = { limit = { has_country_modifier = slaves_share_x4y15 }  remove_country_modifier = slaves_share_x4y15 }

	# Block x = 5
	if = { limit = { has_country_modifier = slaves_share_x5y1 }  remove_country_modifier = slaves_share_x5y1 }
	if = { limit = { has_country_modifier = slaves_share_x5y2 }  remove_country_modifier = slaves_share_x5y2 }
	if = { limit = { has_country_modifier = slaves_share_x5y3 }  remove_country_modifier = slaves_share_x5y3 }
	if = { limit = { has_country_modifier = slaves_share_x5y4 }  remove_country_modifier = slaves_share_x5y4 }
	if = { limit = { has_country_modifier = slaves_share_x5y5 }  remove_country_modifier = slaves_share_x5y5 }

	if = { limit = { has_country_modifier = slaves_share_x5y6 }  remove_country_modifier = slaves_share_x5y6 }
	if = { limit = { has_country_modifier = slaves_share_x5y7 }  remove_country_modifier = slaves_share_x5y7 }
	if = { limit = { has_country_modifier = slaves_share_x5y8 }  remove_country_modifier = slaves_share_x5y8 }
	if = { limit = { has_country_modifier = slaves_share_x5y9 }  remove_country_modifier = slaves_share_x5y9 }
	if = { limit = { has_country_modifier = slaves_share_x5y10 }  remove_country_modifier = slaves_share_x5y10 }

	if = { limit = { has_country_modifier = slaves_share_x5y11 }  remove_country_modifier = slaves_share_x5y11 }
	if = { limit = { has_country_modifier = slaves_share_x5y12 }  remove_country_modifier = slaves_share_x5y12 }
	if = { limit = { has_country_modifier = slaves_share_x5y13 }  remove_country_modifier = slaves_share_x5y13 }
	if = { limit = { has_country_modifier = slaves_share_x5y14 }  remove_country_modifier = slaves_share_x5y14 }
	if = { limit = { has_country_modifier = slaves_share_x5y15 }  remove_country_modifier = slaves_share_x5y15 }

	# Block x = 6
	if = { limit = { has_country_modifier = slaves_share_x6y1 }  remove_country_modifier = slaves_share_x6y1 }
	if = { limit = { has_country_modifier = slaves_share_x6y2 }  remove_country_modifier = slaves_share_x6y2 }
	if = { limit = { has_country_modifier = slaves_share_x6y3 }  remove_country_modifier = slaves_share_x6y3 }
	if = { limit = { has_country_modifier = slaves_share_x6y4 }  remove_country_modifier = slaves_share_x6y4 }
	if = { limit = { has_country_modifier = slaves_share_x6y5 }  remove_country_modifier = slaves_share_x6y5 }

	if = { limit = { has_country_modifier = slaves_share_x6y6 }  remove_country_modifier = slaves_share_x6y6 }
	if = { limit = { has_country_modifier = slaves_share_x6y7 }  remove_country_modifier = slaves_share_x6y7 }
	if = { limit = { has_country_modifier = slaves_share_x6y8 }  remove_country_modifier = slaves_share_x6y8 }
	if = { limit = { has_country_modifier = slaves_share_x6y9 }  remove_country_modifier = slaves_share_x6y9 }
	if = { limit = { has_country_modifier = slaves_share_x6y10 }  remove_country_modifier = slaves_share_x6y10 }

	if = { limit = { has_country_modifier = slaves_share_x6y11 }  remove_country_modifier = slaves_share_x6y11 }
	if = { limit = { has_country_modifier = slaves_share_x6y12 }  remove_country_modifier = slaves_share_x6y12 }
	if = { limit = { has_country_modifier = slaves_share_x6y13 }  remove_country_modifier = slaves_share_x6y13 }
	if = { limit = { has_country_modifier = slaves_share_x6y14 }  remove_country_modifier = slaves_share_x6y14 }
	if = { limit = { has_country_modifier = slaves_share_x6y15 }  remove_country_modifier = slaves_share_x6y15 }

	# Block x = 7
	if = { limit = { has_country_modifier = slaves_share_x7y1 }  remove_country_modifier = slaves_share_x7y1 }
	if = { limit = { has_country_modifier = slaves_share_x7y2 }  remove_country_modifier = slaves_share_x7y2 }
	if = { limit = { has_country_modifier = slaves_share_x7y3 }  remove_country_modifier = slaves_share_x7y3 }
	if = { limit = { has_country_modifier = slaves_share_x7y4 }  remove_country_modifier = slaves_share_x7y4 }
	if = { limit = { has_country_modifier = slaves_share_x7y5 }  remove_country_modifier = slaves_share_x7y5 }

	if = { limit = { has_country_modifier = slaves_share_x7y6 }  remove_country_modifier = slaves_share_x7y6 }
	if = { limit = { has_country_modifier = slaves_share_x7y7 }  remove_country_modifier = slaves_share_x7y7 }
	if = { limit = { has_country_modifier = slaves_share_x7y8 }  remove_country_modifier = slaves_share_x7y8 }
	if = { limit = { has_country_modifier = slaves_share_x7y9 }  remove_country_modifier = slaves_share_x7y9 }
	if = { limit = { has_country_modifier = slaves_share_x7y10 }  remove_country_modifier = slaves_share_x7y10 }

	if = { limit = { has_country_modifier = slaves_share_x7y11 }  remove_country_modifier = slaves_share_x7y11 }
	if = { limit = { has_country_modifier = slaves_share_x7y12 }  remove_country_modifier = slaves_share_x7y12 }
	if = { limit = { has_country_modifier = slaves_share_x7y13 }  remove_country_modifier = slaves_share_x7y13 }
	if = { limit = { has_country_modifier = slaves_share_x7y14 }  remove_country_modifier = slaves_share_x7y14 }
	if = { limit = { has_country_modifier = slaves_share_x7y15 }  remove_country_modifier = slaves_share_x7y15 }

}

slaves_find_coordinates = {				# hotfix: moved to x.xx an not xxx, to avoid overflow

	# X, total slave population %
	if = { 		limit = { check_variable = { slave_pop_social = 2.00 } } 	set_country_flag = slaves_x7 }
	else_if = { limit = { check_variable = { slave_pop_social = 1.20 } } 	set_country_flag = slaves_x6 }
	else_if = { limit = { check_variable = { slave_pop_social = 0.80 } }  	set_country_flag = slaves_x5 }
	else_if = { limit = { check_variable = { slave_pop_social = 0.50 } }  	set_country_flag = slaves_x4 }
	else_if = { limit = { check_variable = { slave_pop_social = 0.25 } }  	set_country_flag = slaves_x3 }
	else_if = { limit = { check_variable = { slave_pop_social = 0.10 } }  	set_country_flag = slaves_x2 }
	else_if = { limit = { check_variable = { slave_pop_social = 0 } }   	set_country_flag = slaves_x1 }

	# Y, slave population % adjusted to productivity

	if = { 		limit = { check_variable = { slave_pop_economic = 3.00 } } 	set_country_flag = slaves_y15 }
	else_if = { limit = { check_variable = { slave_pop_economic = 2.50 } } 	set_country_flag = slaves_y14 }
	else_if = { limit = { check_variable = { slave_pop_economic = 2.00 } } 	set_country_flag = slaves_y13 }
	else_if = { limit = { check_variable = { slave_pop_economic = 1.60 } } 	set_country_flag = slaves_y12 }
	else_if = { limit = { check_variable = { slave_pop_economic = 1.40 } } 	set_country_flag = slaves_y11 }
	else_if = { limit = { check_variable = { slave_pop_economic = 1.20 } } 	set_country_flag = slaves_y10 }
	else_if = { limit = { check_variable = { slave_pop_economic = 1.00 } } 	set_country_flag = slaves_y9 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.80 } }  set_country_flag = slaves_y8 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.60 } }  set_country_flag = slaves_y7 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.50 } }  set_country_flag = slaves_y6 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.40 } }  set_country_flag = slaves_y5 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.30 } }  set_country_flag = slaves_y4 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.20 } }  set_country_flag = slaves_y3 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0.10 } }  set_country_flag = slaves_y2 }
	else_if = { limit = { check_variable = { slave_pop_economic = 0 } }   	set_country_flag = slaves_y1 }



}

slaves_ratio_create_high = {
	trigger_switch = {
		on_trigger = has_country_flag
		slaves_x1 = { slaves_ratio_create_low = { coordx = x1 } }
		slaves_x2 = { slaves_ratio_create_low = { coordx = x2 } }
		slaves_x3 = { slaves_ratio_create_low = { coordx = x3 } }
		slaves_x4 = { slaves_ratio_create_low = { coordx = x4 } }
		slaves_x5 = { slaves_ratio_create_low = { coordx = x5 } }
		slaves_x6 = { slaves_ratio_create_low = { coordx = x6 } }
		slaves_x7 = { slaves_ratio_create_low = { coordx = x7 } }
	}

}

slaves_ratio_create_low = {
	trigger_switch = {
		on_trigger = has_country_flag
		slaves_y1 = {  add_country_modifier = { name = slaves_share_$coordx$y1 duration = -1 } }
		slaves_y2 = {  add_country_modifier = { name = slaves_share_$coordx$y2 duration = -1 } }
		slaves_y3 = {  add_country_modifier = { name = slaves_share_$coordx$y3 duration = -1 } }
		slaves_y4 = {  add_country_modifier = { name = slaves_share_$coordx$y4 duration = -1 } }
		slaves_y5 = {  add_country_modifier = { name = slaves_share_$coordx$y5 duration = -1 } }
		slaves_y6 = {  add_country_modifier = { name = slaves_share_$coordx$y6 duration = -1 } }
		slaves_y7 = {  add_country_modifier = { name = slaves_share_$coordx$y7 duration = -1 } }
		slaves_y8 = {  add_country_modifier = { name = slaves_share_$coordx$y8 duration = -1 } }
		slaves_y9 = {  add_country_modifier = { name = slaves_share_$coordx$y9 duration = -1 } }
		slaves_y10 = { add_country_modifier = { name = slaves_share_$coordx$y10 duration = -1 } }
		slaves_y11 = { add_country_modifier = { name = slaves_share_$coordx$y11 duration = -1 } }
		slaves_y12 = { add_country_modifier = { name = slaves_share_$coordx$y12 duration = -1 } }
		slaves_y13 = { add_country_modifier = { name = slaves_share_$coordx$y13 duration = -1 } }
		slaves_y14 = { add_country_modifier = { name = slaves_share_$coordx$y14 duration = -1 } }
		slaves_y15 = { add_country_modifier = { name = slaves_share_$coordx$y15 duration = -1 } }
	}

}

slave_abolish_powerreq = {

	# base: 300 adm + dip + mil
	# status laws add or reduce an absolute value
	# harshness laws modify mil cost
	# other laws reduce % adm and dip cost, 10% a small one and 20% each advanced one, depending
	
	set_variable = { which = slave_abolish_adm value = 300 }
	set_variable = { which = slave_abolish_dip value = 300 }
	set_variable = { which = slave_abolish_mil value = 300 }
	
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_status_2 = {							# Serfdom
			change_variable = { slave_abolish_adm = 50 }	# more traditions that have to be changed
			change_variable = { slave_abolish_dip = 50 }
			change_variable = { slave_abolish_mil = 50 }
		}
		estate_slaves_status_4 = {							# Chattel slavery
			change_variable = { slave_abolish_adm = 100 }	# economy is geared toward slaves, so more resitance
			change_variable = { slave_abolish_dip = 100 }
			change_variable = { slave_abolish_mil = 100 }
		}
		estate_slaves_status_5 = {							# State owned
			change_variable = { slave_abolish_adm = 150 }	# the State needs these slave, so cost is higher
			change_variable = { slave_abolish_dip = 150 }
			change_variable = { slave_abolish_mil = 150 }
		}
		estate_slaves_status_6 = {							# Criminal only
			subtract_variable = { slave_abolish_adm = 100 }	# greatly diminished cost
			subtract_variable = { slave_abolish_dip = 100 }
			subtract_variable = { slave_abolish_mil = 100 }
		}
		# only "neutral" costs are 1 (war captives) and 3 (standard)
	}
	
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_condition_1 = { multiply_variable = { slave_abolish_mil = 0.25 } }
		estate_slaves_condition_2 = { multiply_variable = { slave_abolish_mil = 0.50 } }
		estate_slaves_condition_3 = { multiply_variable = { slave_abolish_mil = 0.80 } }
		
		estate_slaves_condition_5 = { multiply_variable = { slave_abolish_mil = 1.25 } }
		estate_slaves_condition_6 = { multiply_variable = { slave_abolish_mil = 1.50 } }
		estate_slaves_condition_7 = { multiply_variable = { slave_abolish_mil = 2.00 } }
		# The harsher the treatment the worst it is to change attitudes
	}
	
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_law_A1 = { multiply_variable = { slave_abolish_adm = 0.90 } }
		estate_slaves_law_A2 = { multiply_variable = { slave_abolish_adm = 0.80 } }
	}
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_law_B1 = { multiply_variable = { slave_abolish_adm = 0.90 } }
		estate_slaves_law_B2 = { multiply_variable = { slave_abolish_adm = 0.80 } }
	}
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_law_C1 = { multiply_variable = { slave_abolish_dip = 0.90 } }
		estate_slaves_law_C2 = { multiply_variable = { slave_abolish_dip = 0.80 } }
	}
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_law_D1 = { multiply_variable = { slave_abolish_dip = 0.90 } }
		estate_slaves_law_D2 = { multiply_variable = { slave_abolish_dip = 0.80 } }
	}
	trigger_switch = {
		on_trigger = has_estate_privilege
		estate_slaves_law_E1 = { 
			multiply_variable = { slave_abolish_adm = 0.95 } 
			multiply_variable = { slave_abolish_dip = 0.95 } 
		}
		estate_slaves_law_Eº2 = { 
			multiply_variable = { slave_abolish_adm = 0.90 } 
			multiply_variable = { slave_abolish_dip = 0.90 } 
		}
	}
	
	# Total value is then multiplied by roughly slave population
	# -50% if <10%, -25% if <25%, 0 until 60%, +25% after, +50% if >100%
	if = {		
		limit = { check_variable = { slave_pop_social = 100 } } 
		multiply_variable = { slave_abolish_adm = 1.5 }
		multiply_variable = { slave_abolish_dip = 1.5 }
		multiply_variable = { slave_abolish_mil = 1.5 }
	}
	else_if = {	
		limit = { check_variable = { slave_pop_social = 60 } } 
		multiply_variable = { slave_abolish_adm = 1.25 }
		multiply_variable = { slave_abolish_dip = 1.25 }
		multiply_variable = { slave_abolish_mil = 1.25 }
	}
	else_if = {	
		limit = { check_variable = { slave_pop_social = 25 } } 	
		# nothing, the same
	}
	else_if = { 
		limit = { check_variable = { slave_pop_social = 10 } } 	
		multiply_variable = { slave_abolish_adm = 0.75 }
		multiply_variable = { slave_abolish_dip = 0.75 }
		multiply_variable = { slave_abolish_mil = 0.75 }
	}
	else_if = { 
		limit = { check_variable = { slave_pop_social = 10 } } 	
		multiply_variable = { slave_abolish_adm = 0.50 }
		multiply_variable = { slave_abolish_dip = 0.50 }
		multiply_variable = { slave_abolish_mil = 0.50 }
	}
	


}

slave_display_variables = {
	set_variable = { which = slaves_tot_display which = slaves }
	change_variable = { which = slaves_tot_display which = slaves_in_province }
	change_variable = { which = slaves_tot_display which = SD_new_slaves }
	#change_variable = { which = slaves_tot_display which = SD_serfs }			# serfs not ready yet
	change_variable = { which = slaves_tot_display which = SD_slaves_available }
	change_variable = { which = slaves_tot_display which = SD_captives }
	multiply_variable = { slaves_tot_display = 0.001 }			multiply_variable = { slaves_tot_display = 1000 }	# rounding

	set_variable = { which = slaves_oth_disp which = slaves }
	multiply_variable = { slaves_oth_disp = 0.001 }			 	multiply_variable = { slaves_oth_disp = 1000 }
	set_variable = { which = slaves_mnf_display which = slaves_in_province }
	multiply_variable = { slaves_mnf_display = 0.001 }			multiply_variable = { slaves_mnf_display = 1000 }
	set_variable = { which = slaves_new_disp which = SD_new_slaves }
	multiply_variable = { slaves_mnf_display = 0.001 }			multiply_variable = { slaves_new_disp = 1000 }

	multiply_variable = { slave_pop_social = 100 }						# to be in percentage (1 to 100), not units (0,x to 1,0)
	multiply_variable = { slave_pop_economic = 100 }					# to be in percentage (1 to 100)

	export_to_variable = { which = slave_productivity value = modifier:slavesmod_productivity }		  # for display purposes
	change_variable = { slave_productivity = 1 } multiply_variable = { slave_productivity = 100 } # to be in percentage (1 to 100)

	multiply_variable = { slaves_change = 0.001 }	multiply_variable = { slaves_change = 1000 }
	multiply_variable = { slaves_libers = 0.001 }	multiply_variable = { slaves_libers = 1000 }

	multiply_variable = { slave_gain = 100 }		multiply_variable = { slave_net_growth = 100 }
	multiply_variable = { slave_loss = 100 }		multiply_variable = { slave_libratio = 100 }
	multiply_variable = { slave_state_income = 100 }
	export_to_variable = { which = var_total_pop value = total_development }

}

SD_purchase_slaves_active_tn = {
	# This effect is used to find, within a province in our active trade nodes, somewhere with available slaves, and purchase them up to the agreed price.
	# Inputs: num (number of province, 1 to 5), and price (20, 40 or 60 only). The prices must match! All other variables, such as how many slaves to buy and budget, are already set at the country level, so this effect does not need to know.
	# Scope: must be set at ROOT (buyer's country)
	# example: SD_purchase_slaves_active_tn = { num = 1 price = 20 }

	random_active_trade_node = {
		limit = {
			any_trade_node_member_province = {
				has_province_modifier = SD_market_open
				check_variable = { SD_slaves_available = 1 }
				NOT = { has_province_flag = SD_taken }
				is_variable_equal = { SD_trade_price = $price$ }
			}
		}
		random_trade_node_member_province = {
			limit = {
				has_province_modifier = SD_market_open
				check_variable = { SD_slaves_available = 1 }
				NOT = { has_province_flag = SD_taken }
				is_variable_equal = { SD_trade_price = $price$ }
			}
			save_event_target_as = SD_purchase_province_$num$
			set_province_flag = SD_taken

			# SLAVES (AMOUNT)
			# define slave size: dependent on CoT level
			export_to_variable = { which = SD_sell_size value = trigger_value:province_has_center_of_trade_of_level }
			if = {
				limit = { check_variable = { SD_sell_size = 1 } }	# at least a CoT
				multiply_variable = { SD_sell_size = 10 }
			}
			else_if = {
				limit = { is_capital = yes }	# if no CoT, then at least a capital
				set_variable = { which = SD_sell_size value = 10 }
			}
			else = {
				set_variable = { which = SD_sell_size value = 3 }	# residual value
			}

			# Cap depending on total slaves being sold
			if = {
				limit = { check_variable = { which = SD_sell_size which = SD_slaves_available } }
				set_variable = { which = SD_sell_size which = SD_slaves_available }			# More slaves capable to sell than available = capped
			}

			# Root (buyer): is this how many slaves you need? Maybe less? -> needs to be done before the price
			ROOT = {
				set_variable = { which = SD_sell_size which = PREV }
				if = {
					limit = { check_variable = { which = SD_sell_size which = SD_slave_demand } }	# more in offer than needed -> cut
					set_variable = { which = SD_sell_size which = SD_slave_demand }
					event_target:SD_purchase_province_$num$ = { set_variable = { which = SD_sell_size which = ROOT } }
				}

			}

			# PRICE (MONEY)
			# Transaction price will be: base (20, 40, 60) + seller's advantage - buyer's advantage (modifiers) +/- %20 random list

			set_variable = { which = SD_transaction value = 1 }
			export_to_variable = { which = SD_pricemod value = modifier:trade_efficiency who = owner }
			change_variable = { which = SD_transaction which = SD_pricemod }
			export_to_variable = { which = SD_pricemod value = modifier:global_own_trade_power who = owner }
			change_variable = { which = SD_transaction which = SD_pricemod }

			export_to_variable = { which = SD_pricemod value = modifier:trade_efficiency who = ROOT }
			subtract_variable = { which = SD_transaction which = SD_pricemod }
			export_to_variable = { which = SD_pricemod value = modifier:global_foreign_trade_power who = ROOT }
			subtract_variable = { which = SD_transaction which = SD_pricemod }

			random_list = {
				20 = { multiply_variable = { SD_transaction = 1.2 } }
				20 = { multiply_variable = { SD_transaction = 1.1 } }
				20 = {  }
				20 = { multiply_variable = { SD_transaction = 0.9 } }
				20 = { multiply_variable = { SD_transaction = 0.8 } }	# bargaining can still go wrong...
			}
			set_variable = { which = SD_pricemod which = SD_transaction }
			subtract_variable = { SD_pricemod = 1 }
			multiply_variable = { SD_pricemod = 0.1 }
			multiply_variable = { SD_pricemod = 1000 }					# to be displayed in the event

			# cap: max +50% and -50%
			if = { limit = { 		 check_variable = { SD_transaction = 1.5 } } 	set_variable = { which = SD_transaction value = 1.5 } }
			if = { limit = { NOT = { check_variable = { SD_transaction = 0.5 } } } 	set_variable = { which = SD_transaction value = 0.5 } }

			# Now, multiply by size. Remember we have slaves (thousand) but price (10k). Must be divided /10
			multiply_variable = { SD_transaction = 0.1 }
			multiply_variable = { which = SD_transaction which = SD_sell_size }
			multiply_variable = { which = SD_transaction which = SD_trade_price }

			# Done! Now we have both money exchanged (SD_transaction) and amount of slaves (SD_sell_size)

			# Back to the buyer country. Remove money, add new slaves
			ROOT = {
				set_variable = { which = SD_transaction which = PREV }
				change_variable = { which = SD_new_paid which = SD_transaction }

				set_variable = { which = SD_sell_size which = PREV }
				change_variable = { which = SD_new_purchases which = SD_sell_size }

			}

			# money left at the province, slaves removed
			change_variable = { which = SD_sale_collected which = SD_transaction }
			subtract_variable = { which = SD_slaves_available which = SD_sell_size }



		}

	}


}

SD_slave_totaldisp_update = {
	set_variable = { which = slaves_tot_display which = slaves }
	change_variable = { which = slaves_tot_display which = slaves_in_province }
	change_variable = { which = slaves_tot_display which = SD_new_slaves }
	#change_variable = { which = slaves_tot_display which = SD_serfs }			# serfs not ready yet
	change_variable = { which = slaves_tot_display which = SD_slaves_available }
	change_variable = { which = slaves_tot_display which = SD_captives }
	multiply_variable = { slaves_tot_display = 0.001 }			multiply_variable = { slaves_tot_display = 1000 }	# rounding


}


